<template>

  <view class="container">
    <view class="zan-panel" style="margin-top: 0">

      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">手机号</view>
        <input class="zan-field__input zan-cell__bd" placeholder="请输入手机号" maxlength="11" type="number" @input="userInput('phone')" />
        <view class="zan-cell__ft">
          <button class="zan-btn zan-btn--mini zan-btn--primary" @tap="sendmessg" disabled="{{disable}}">{{getmsg}}</button>
        </view>
      </view>

      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">验证码</view>
        <input class="zan-field__input zan-cell__bd" placeholder="请输入验证码"  type="number" @input="userInput('msg')" maxlength="4"/>
      </view>

      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">输入密码</view>
        <input class="zan-field__input zan-cell__bd" placeholder="请输入密码" type="password" @input="userInput('pass')" maxlength="16" />
      </view>

      <view class="zan-cell zan-field" style="display: none">
        <view class="zan-cell__hd zan-field__title">确认密码</view>
        <input class="zan-field__input zan-cell__bd" placeholder="请再次输入密码" type="password" @input="userInput('passtow')" maxlength="16" />
      </view>
    </view>

    <view class="zan-panel topbor" style="margin-top: 0;display: none">

      <view class="zan-cell zan-field" style="display: none">
        <view class="zan-cell__hd zan-field__title">邮    箱</view>
        <input class="zan-field__input zan-cell__bd" placeholder="请输入邮箱(选填)" type="email" @input="userInput('email')" />
      </view>

      <view class="zan-cell zan-field zan-cell--access" @tap="showPicker">
        <view class="zan-cell__hd zan-field__title">现居地址:</view>
          <view class="zan-field__input zan-cell__bd area_select" wx:if="{{ !!addressName }}" >{{addressName}}</view>
          <view class="zan-field__input zan-cell__bd area_select" wx:else >请选择现居住地</view>
        <view class="zan-cell__ft"></view>
      </view>

    </view>
    <view class="zan-panel topbor" style="margin-top: 0">

      <view class="text">
        注册即表示同意 <navigator url="/pages/webview/webview?url=https://odrcloud.net/jsp/user/registerAgree.jsp">《在线矛盾纠纷多元化解平台服务协议》</navigator>
      </view>

      <view class="btnbox">
        <button class="zan-btn zan-btn--primary {{ loading ? 'zan-btn--loading' : '' }}" disabled="{{ loading }}" @tap="submit">注册</button>
      </view>

    </view>
  </view>

  <address-picker :show.sync="pickerShow" @change.user="hanldePickerChange"></address-picker>

</template>

<script>
  import wepy from 'wepy'
  import AddressPicker from '@/components/address-picker'
  import {validate, patterns} from '@/utils/validate'
  import {saveToken, saveUserInfo} from '@/utils/utils'
  import {getVerifyCode, userSignup, checkUserIsRegister, userSignin} from '@/api/sign'

  export default class SignUp extends wepy.page {
    config = {
      navigationBarTitleText: '注册'
    }
    components={
      'address-picker': AddressPicker
    }
    data = {
      phone: '',
      msg: '',
      pass: '',
      passtow: '',
      email: '',
      getmsg: '获取验证码',
      disable: false,
      animationData: '',
      loading: false,
      pickerShow: false,
      isDispute: true,
      areaCode: '',
      address: []
    }
    computed={
      // addressName() {
      //   return this.address.map(({name}) => name).join('')
      // }
    }
    methods = {
      // 以下为用户输入事件
      userInput(field, {detail}) {
        this[field] = detail.value.trim()
      },
      // 发送验证码
      sendmessg() {
        if (this.validate(true)) {
          wx.showLoading()
          checkUserIsRegister({
            oldPhone: this.phone
          }).then((data) => {
            // console.log(data)
          }).catch((e = {}) => {
           // console.log(e.code)
            if (e.code === '200025') { // 返回 25 是表示  手机号 已经存在
              wx.hideLoading()
              wx.showToast({
                title: e.message,
                icon: 'none',
                duration: 2000
              })
            } else if (e.code === '200012') { // 返回 12 是表示手机号未注册 然后发送验证码
              getVerifyCode({
                oldPhone: this.phone
              })
                .then(() => {
                  wx.hideLoading()
                  wx.showToast({title: '短信验证码已发送至您的手机，请注意查收！', icon: 'none'})
                  this.countdown()
                })
                .catch(() => {
                  wx.hideLoading()
                })
            } else {
              wx.hideLoading()
            }
          })
        }
      },
      // 点击选择省市区
      showPicker() {
        this.pickerShow = true
        this.$apply()
      },
      hanldePickerChange(list) {
        this.address = [...list]

        const item = list.pop()

        this.areaCode = item ? item.code : ''
      },
      // 点击注册按钮
      submit() {
        // wx.navigateBack()
        // wx.redirectTo({  // 登录完成跳转 实名认证页面
        //   url: '/pages/home/home'
        // })
        // return
        if (this.validate()) {
          this.loading = true
          wx.showLoading()
          checkUserIsRegister({
            oldPhone: this.phone
          }).then((data) => {
          }).catch((e = {}) => {
            if (e.code === '200025') { // 返回 25 是表示  手机号 已经存在
              wx.hideLoading()
              this.loading = false
              this.$apply()
              wx.showToast({
                title: e.message,
                icon: 'none',
                duration: 2000
              })
            } else if (e.code === '200012') { // 返回 12 是表示手机号未注册
              userSignup({
                oldPhone: this.phone,
                areaCode: this.areaCode,
                // address: this.addressName,
                // email: this.email,
                verifyCode: this.msg,
                password: this.pass,
                // password2: this.passtow,
                name: this.phone
              }).then(data => {
                console.log(data)
                // 注册成功 调用登录接口 直接让默认登录 获取token
                userSignin({
                  name: this.phone,
                  pwd: this.pass
                })
                  .then((data = {}) => {
                    this.loading = false
                    wx.hideLoading()
                    console.log(data)
                    // 登录成功 保存token
                    saveToken(data.token)
                    // 保存用户信息
                    const {user = {}} = data
                    saveUserInfo(Object.assign(data, {...user}, {avatarUrl: user.headPortrait}))
                    // wx.redirectTo({  // 登录完成跳转 实名认证页面
                    //   url: '/pages/user/real-name-authentication'
                    // })
                    wx.navigateBack()
                    // wx.redirectTo({  // 登录完成跳转 实名认证页面
                    //   url: '/pages/user/real-name-authentication'
                    // })
                  })
                  .catch(() => {
                    this.loading = false
                    wx.hideLoading()
                    this.$apply()
                  })
              }).catch(() => {
                this.loading = false
                wx.hideLoading()
                this.$apply()
              })
            } else {
              wx.hideLoading()
              this.loading = false
              this.$apply()
            }
          })
        }
      }
    }
    // 倒计时
    countdown(t = 60) {
      if (--t > 0) {
        this.disable = true
        this.getmsg = `${t}s后再次发送`
        setTimeout(() => this.countdown(t), 1000)
      } else {
        this.getmsg = '再次获取验证码'
        this.disable = false
      }
      this.$apply()
    }

    validate(isBreak = false) {
      let valid = validate({
        phone: {
          required: '请输入手机号',
          pattern: patterns.phone,
          message: '请输入正确的手机号'
        }
      }, this)

      if (isBreak) {
        return valid
      }
      //  更改
      if (valid) {
        valid = validate({
          msg: {
            required: '请输入验证码',
          },
          pass: {
            required: '请输入密码',
            patterns: [{
              pattern: patterns.passwd1,
              message: '请输入6~16位随机字符'
            },
            // {
            //   // 不能是大写字母
            //   pattern: val => !/[A-Z]/.test(val),
            //   message: '请输入8~16位数字、字母，字母需小写'
            // }
            ]
          },
          // passtow: {
          //   required: '请再次输入密码',
          //   pattern: val => val === this.pass,
          //   message: '两次输入的密码不一致，请重新输入'
          // },
          // email: {
          //   pattern: patterns.email,
          //   message: '请输入正确的邮箱',
          // },
          // addressName: '请选择现居地址'
        }, this)
      }
      return valid
    }
  }
</script>

<style lang="scss">
  @import '../../styles/variables.scss';
  page {
    position: relative;
    height: 100%;
  }
  .container{
    background-color:$white;
  }
  .text{
    font-size: 10px;
    padding: 10px 15px;
    text-align: center;
  }
  .zan-btn--mini{
    font-size: 12px;
  }
  navigator {
    display:inline-block;
    color: $orange;
  }

  .topbor{
    border-top: 10px solid $background-color;
  }
  .zan-field {
    padding: 0 15px;
  }
  .zan-field__title {
    color: #333;
    min-width: 65px;
    padding-right: 10px;
    font-size: 28rpx;
    font-weight: bold;
  }
  .text-right{
    text-align: right;
  }
  .zan-field__input {
    flex: 1;
    line-height: 1.6;
    padding: 10px 0;
    min-height: 22px;
    height: auto;
    font-size: 28rpx;
  }
  .btnbox{
    width: 80%;
    margin: 10px auto;
  }

</style>
